name: Package and Release

on:
  push:
    tags:
      - "**"
    branches:
      - "master"

  pull_request:
    branches:
      - "master"

  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: google-github-actions/release-please-action@v2
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple
      - name: "Check if PR was merged and has 'autorelease: pending' label"
        run: |
          if [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
            for label in ${{ toJson(github.event.pull_request.labels.*.name) }}; do
              if [[ "$label" == "autorelease: pending" ]]; then
                echo "PR was merged and has 'autorelease: pending' label"
                exit 0
              fi
            done
          fi
          echo "PR was not merged or does not have 'autorelease: pending' label"
          exit 1
      - name: Update version in .toc file
        if: ${{ steps.release.outputs.release_created }}
        run: |
          VERSION=$(echo ${{ steps.release.outputs.release_version }} | sed 's/^v//')
          sed -i "s/## Version: .*/## Version: $VERSION/" Ranoth's\ utility.toc
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Update version in .toc file"
      - name: Push changes
        run: git push

      - name: install commands
        run: |
          sudo apt update
          sudo apt install subversion zip wget
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.12.2/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq

      - name: Build and compress addon
        run: bash build.sh

      - name: Get zip name
        id: get_addon_name
        run: echo "::set-output name=addonname::$(cat addonName.txt)"

      - name: Attach built addon to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./build/${{ steps.get_addon_name.outputs.addonname }}/${{ steps.get_addon_name.outputs.addonname }}.zip
          asset_name: ${{ steps.get_addon_name.outputs.addonname }}.zip
          asset_content_type: application/zip

      # - name: Upload to CurseForge
      #   uses: itsmeow/curseforge-upload@v3
      #   with:
      #     file_path: "./build/${{ steps.get_addon_name.outputs.addonname }}/${{ steps.get_addon_name.outputs.addonname }}.zip"
      #     game_endpoint: "wow"
      #     project_id: "1000615"
      #     token: ${{ secrets.CF_API_KEY }}
      #     changelog: CHANGELOG.md
      #     changelog_type: "markdown"
