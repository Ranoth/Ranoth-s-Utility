name: Package and Release

on:
  release:
    types:
      - released

jobs:
  post_pr:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          ref: refs/heads/master

      - name: Get latest release
        id: get_release
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          RELEASE_URL=$(gh api repos/:owner/:repo/releases/latest --jq .upload_url)
          echo "RELEASE_URL=$RELEASE_URL" >> "$GITHUB_OUTPUT"

          LATEST_RELEASE_ID=$(gh api repos/:owner/:repo/releases/latest --jq .id)
          echo "latest_release_id=$LATEST_RELEASE_ID" >> "$GITHUB_OUTPUT"

          RELEASE_JSON=$(curl --header "Authorization: token ${{ secrets.PAT }}" "https://api.github.com/repos/${{ github.repository }}/releases/$LATEST_RELEASE_ID")
          RELEASE_BODY=$(echo "$RELEASE_JSON" | jq -r .body)

          echo "$RELEASE_BODY" > "RELEASE.md"

      - name: Package and release
        uses: BigWigsMods/packager@v2
        env:
          GITHUB_OAUTH: ${{ secrets.PAT }}
          CF_API_KEY: ${{ secrets.CF_API_KEY }}

      - name: Get zip name
        id: get_zip_name
        run: |
          ZIP_NAME=$(basename $(ls release/*.zip) .zip)
          echo "ZIP_NAME=$ZIP_NAME" >> "$GITHUB_OUTPUT"

      - name: Attach built addon to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.get_release.outputs.RELEASE_URL }}
          asset_path: ./release/${{ steps.get_zip_name.outputs.ZIP_NAME }}.zip
          asset_name: ${{steps.get_zip_name.outputs.ZIP_NAME}}
          asset_content_type: application/zip
