name: Package and Release

on:
  release:
    types: [published]

jobs:
  post_pr:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Update version in .toc file
        id: get_version
        run: |
          VERSION="v$(cat version.txt)"
          sed -i "s/## Version: .*/## Version: $VERSION/" "Ranoth's utility.toc"
          echo "::set-output name=version::$VERSION"
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Update version in .toc file"
      - name: Push changes
        run: git push
      - name: install commands
        run: |
          sudo apt update
          sudo apt install subversion zip wget dos2unix
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.12.2/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq
      - name: Build and compress addon
        run: |
          dos2unix build.sh
          bash build.sh
      - name: Get addon name
        id: get_addon_name
        run: |
          ADDON_NAME=$(cat ./build/addonName.txt)
          echo "::set-output name=addonname::$ADDON_NAME"
      - name: Get latest release
        id: get_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # run: |
        #   RELEASE_URL=$(gh api repos/:owner/:repo/releases/latest --jq .upload_url)
        #   echo "RELEASE_URL=$RELEASE_URL" >> $GITHUB_ENV
        run: |
          RELEASE_URL=$(gh api repos/:owner/:repo/releases/latest --jq .upload_url)
          echo "::set-output name=release_url::$RELEASE_URL"
          LATEST_RELEASE_ID=$(gh api repos/:owner/:repo/releases/latest --jq .id)
          echo "::set-output name=latest_release_id::$LATEST_RELEASE_ID"
          RELEASE_JSON=$(curl --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/$LATEST_RELEASE_ID")
          RELEASE_BODY=$(echo $RELEASE_JSON | jq -r .body)
          echo "::set-output name=release_body::${RELEASE_BODY//$'\n'/%0A}"
      - name: Attach built addon to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.release_url }}
          asset_path: ./build/${{ steps.get_addon_name.outputs.addonname }}.zip
          asset_name: ${{ steps.get_addon_name.outputs.addonname }}.zip
          asset_content_type: application/zip

      - name: Upload to CurseForge
        uses: itsmeow/curseforge-upload@v3
        with:
          file_path: "./build/${{ steps.get_addon_name.outputs.addonname }}.zip"
          game_endpoint: "wow"
          project_id: "1000615"
          display_name: ${{ steps.get_version.outputs.version }}
          token: ${{ secrets.CF_API_KEY }}
          changelog: ${{ steps.get_release.outputs.release_body }}
          changelog_type: "markdown"
          game_versions: "10.2.7"
